Міністерство освіти і науки України
Національний технічний університет України
"Київський політехнічний інститут імені Ігоря Сікорського"
Кафедра автоматизації теплоенергетичних процесів




Лабораторна робота №1
з дисципліни “Системи реального часу”
Варіант №6





Виконав:
студент групи ТА-91МП
Єфремов О.Ю.
Перевірив:
Грудзинський Ю. Є.





Київ – 2019
Зміст
1.	Завдання до лабораторної роботи	3
2.	Принципова електрична схема підключення пристроїв до контролера	4
3.	Схема алгоритму програми	5
4.	Текст програми	6
5.	Результати роботи	8
Висновок	8

1. Завдання до лабораторної роботи
1. Перейти в кореневу директорію (папку). Перевірте, де ви знаходитесь. 
• ls - вивести вміст директорії ... 
2. просто; 
3. в зворотньому порядку; 
4. а також вміст піддиректорій; 
5. включаючи приховані файли; 
6. із зазначенням розміру файлів в КБ / МБ / ГБ; 
7. відсортоване за розміром і з зазначенням розміру в КБ / МБ / ГБ; 
8. тільки імена вкладених директорій, розташованих в поточній директорії; 
9. відсортоване за датою створення файлу; 
10. відсортоване за датою останнього звернення до файлу; 
11. тільки файли, друга буква імені яких - голосна англ. алфавіту; 
12. записати список файлів і папок в поточній директорії (з повною інформацією про них) в файл dirlist.txt, який лежить в домашній директорії. 
 
• df, du - дисковий простір 
13. виведення загальної інформації про вільне місце у вашій системі  
14. показати розміри файлів та директорій в зручному для сприйняття вигляді  
15. показати, скільки місця на диску займають файли і директорії для поточного каталогу 
16. показати справжні розміри файлів та директорій, а не займане ними на диску місце 
17. вивести інформацію про тип файлової системи для кожної директорії 
18. включити до виводу файлові системи, розмір яких становить 0 блоків, (які за замовчуванням опущені) 
19. вивести інформацію тільки про локальні файлові системи 
20. вивести розмір кожної папки для поточного каталогу, при цьому включаючи всі підкаталоги 
21. вивести таку ж інформацію по зазначеній директорії 
22. отримати значення розмірів папок в більш зручному для сприйняття форматі 23. отримати загальний розмір, який займає певна папка 
24. вивести підрахунок загальної суми розмірів декількох зазначених директорій 25. вивести підрахунок загальної суми розмірів декількох зазначених директорій в зручному для сприйняття вигляді 
 
• mkdir - створення каталогу ... 
26. Створити в домашній директорії папку linux_lab1. Далі працювати у каталозі linux_lab1. 
27. Увійти в директорію linux_lab1. 
28. Скопіювати в неї файл dirlist.txt з домашньої директорії. 
29. Видалити файл dirlist.txt з домашньої директорії. 
 
• Створення, копіювання, переміщення файлів ... 
30. Створити директорію manyfiles. 
31. Створити в ній 100 файлів з іменами a1, a2, a3, .... a100. 
32. Створити директорії manyfiles10 і manyfiles30. 
33. У директорію manyfiles1 перенести файли а1, ..., a10. 
34. У директорію manyfiles2 скопіювати файли з номерами, кратними 5. 
35. З директорії manyfiles видалити тільки файли з парними номерами. 
36. Створити директорію manyfiles3 з файлами, як копію директорії manyfiles1. 
37. Видалити директорію з файлами manyfiles1. 
38. Створіть каталог Toppler, що містить два файли: high11 і low11. 
39. Скопіюйте обидва ці файли в каталог /tmp. 
40. Перемістіть ці два файли з каталогу /tmp в домашній каталог, використовуючи символи підстановки. 
41. Рекурсивно скопіюйте каталог Toppler в /tmp. 
42. Перейменуйте в /tmp цей каталог в Roller. 
43. Перемістіть отриманий каталог з усім вмістом в домашній каталог так, щоб на екрані відображалася інформація про процес переміщення. 
 
• grep - пошук рядків, що відповідають заданому регулярному виразу 
47. Вивести рядки файлу dirlist.txt, що містять файли з певним місяцем (в залежності від номер варіанта 1-січень, .. 12 – грудень) і записати їх в файл grep_month_name.txt. 
48. Записати рядки, що не містять цей місяць, в файл grep_other_monthes.txt. 
49. Створити папку grep, перемістити в неї файли, створені в пунктах 47 і 48. 
50. Перебуваючи в папці linux_lab1 знайти всі файли в цій директорії і її піддиректоріях в яких зустрічається підрядок 'stud', вивести рядки із зазначенням їх номерів. 
 
• find - пошук файлів 
51. Знайти всі файли в системі, що містять в імені 'bash' (за допомогою команд find і locate). Яка з команд працює швидше, чому? Перевірити чи збігаються результати виконання обох команд, чим вони відрізняються, чому? 
52. Знайти файли, змінені за останні сутки. 
53. Знайти жорсткі посилання в каталозі / (але не глибше!), вивести, на що вони вказують. 
54. Поміняти запрошення командного рядка (змінна PS1), додати ім'я хосту. 
55. Видалити весь каталог manyfiles з усіма файлами.

2. Виконавчий код програми
Виконавчий код програми 
#!/bin/bash 
 
function First_Step { 
#  виведення вмісту директорії 
#  1. Перейти в кореневу директорію (папку). 
Перевірте, де ви знаходитесь.  
pwd 
# вивести вміст директорії ...
# 2. просто;  
ls -l 
# 3. в зворотньому порядку; 
ls -r 
# 4. а також вміст піддиректорій;  
ls -R 
# 5. включаючи приховані файли;  
ls –la
# 6. із зазначенням розміру файлів в КБ / МБ / ГБ;  
ls –lh
# 7. відсортоване за розміром і з зазначенням розміру в КБ / МБ / ГБ;
ls -lS 
# 8. тільки імена вкладених директорій, розташованих в поточній директорії;
 ls -d */
# 9. відсортоване за датою створення файлу; 
ls -c 
# 10. відсортоване за датою останнього звернення до файлу;  
ls -t 
# 11. тільки файли, друга буква імені яких - голосна англ. алфавіту;  
ls –l ?[aeiyo]*.*
# 12. записати список файлів і папок в поточній директорії (з повною інформацією про них) в файл dirlist.txt, який лежить в домашній директорії. 
ls -l > dirlist.txt 
} 
 
 function Second_Step {
# 13. виведення загальної інформації про вільне місце у вашій системі  
df
# 14. показати розміри файлів та директорій в зручному для сприйняття вигляді  
df -h
# 15. показати, скільки місця на диску займають файли і директорії для поточного каталогу 
df . 
# 16. показати справжні розміри файлів та директорій, а не займане ними на диску місце 
du
# 17. вивести інформацію про тип файлової системи для кожної директорії 
df -T
# 18. включити до виводу файлові системи, розмір яких становить 0 блоків, (які за замовчуванням опущені) 
df -a
# 19. вивести інформацію тільки про локальні файлові системи 
df -l
# 20. вивести розмір кожної папки для поточного каталогу, при цьому включаючи всі підкаталоги 
du ./*
# 21. Вивести таку ж інформацію по зазначеній директорії 
du Downloads
# 22. отримати значення розмірів папок в більш зручному для сприйняття форматі 
du -h
# 23. отримати загальний розмір, який займає певна папка 
du –s ./Videos
# 24. вивести підрахунок загальної суми розмірів декількох зазначених директорій 
du –sc ./Downloads ./Videos
# 25. вивести підрахунок загальної суми розмірів декількох зазначених директорій в зручному для сприйняття вигляді
du –sch ./Downloads ./Videos

} 

function Third_Step
{
 # 26. Створити в домашній директорії папку linux_lab1. Далі працювати у 
# каталозі linux_lab1.  
mkdir linux_lab1 
# 27. Увійти в директорію linux_lab1.  
cd linux_lab1 
# 28. Скопіювати в неї файл dirlist.txt з домашньої директорії.  
cp /home/pi/dirlist.txt /home/pi/linux_lab1/dirlist.txt 
# 29. Видалити файл dirlist.txt з домашньої директорії.  
rm /home/pi/dirlist.txt 
# Видалити файл dirlist.txt з домашньої директорії.  
rm /home/pi/dirlist.txt 
} 
 
function Fourth_Step
 {
 # 30. Створити директорію manyfiles.  
mkdir manyfiles 
cd manyfiles 
# 31. Створити в ній 100 файлів з іменами a1, a2, a3, .... a100.  
touch a{1..100} 
# 32. Створити директорії manyfiles10 і manyfiles30. 
mkdir manyfiles10 manyfiles30 
# 33. У директорію manyfiles1 перенести файли а1, ..., a10.  
mv a{1..10} manyfiles10 
# 34. У директорію manyfiles30 скопіювати файли з номерами, кратними 5. 
cp a{*0,*5} manyfiles30 
# 35. З директорії manyfiles видалити тільки файли з парними номерами. 
rm a{*0,*2,*4,*6,*8}
# 36. Створити директорію manyfiles3 з файлами, як копію директорії  # manyfiles1. 
cp -r manyfiles10 manyfiles3 
# 37. Видалити директорію з файлами manyfiles10.
 rm -r manyfiles10 
# 38. Створіть каталог Toppler, що містить два файли: high11 і low11. 
mkdir Toppler 
touch Toppler/high11  Toppler/low11 
# 39. Скопіюйте обидва ці файли в каталог /tmp. 
cp ./Toppler/high11 ./Toppler/low11 ./tmp/
# 40. Перемістіть ці два файли з каталогу /tmp в домашній каталог, 
# використовуючи символи підстановки. 
mv ./tmp/*11 ~ 
# 41. Рекурсивно скопіюйте каталог Toppler в /tmp. 
 cp -r ./Toppler/ ./tmp/ 
# 42 Перейменуйте в /tmp цей каталог в Roller. 
mv ./Toppler/ ./Roller/ 
# 43 Перемістіть отриманий каталог з усім вмістом в домашній каталог так,  
# щоб на екрані відображалася інформація про процес переміщення. 
cp -r ./Roller/ ~ && rm -R ./Roller/ 
} 

function Fifth_Step { 
# 47. Вивести рядки файлу dirlist.txt, що містять файли з певним місяцем (в 
# залежності від номер варіанта 1-січень, .. 12 – грудень) і записати їх в файл
# grep_month_name.txt. 
grep -i 'June' dirlist.txt > grep_month_name.txt 
# 48. Записати рядки, що не містять цей місяць, в файл  # grep_other_monthes.txt.  grep -iv 'June' dirlist.txt > grep_other_monthes.txt
# 49. Створити папку grep, перемістити в неї файли, створені в пунктах 47 і 48.  mkdir grep && mv grep_month_name.txt grep && mv grep_other_monthes.txt 
# 50. Перебуваючи в папці linux_lab1 знайти всі файли в цій директорії і її 
# піддиректоріях в яких зустрічається підрядок 'stud', вивести рядки із зазначенням
# їх номерів. 
grep -rn 'stud' 
} 
 
 
function Six_Step 
{ 
# 51. Знайти всі файли в системі, що містять в імені 'bash' (за допомогою команд
#find і locate). Яка з команд працює швидше, чому? Перевірити чи збігаються
#результати виконання обох команд, чим вони відрізняються, чому?  
locate bash find -name ‘bash’ 
# 52. Знайти файли, змінені за останні сутки. 
find / -mtime 1
# 53. Знайти жорсткі посилання в каталозі / (але не глибше!), вивести, на що 
# вони вказують. 
find / -type l -print 
# 55.  Видалити весь каталог manyfiles з усіма файлами. 
rm -r manyfiles } 
 
function ExecuteAll { 
First_Step
Second_Step
Third_Step
Fourth_Step
Fifth_Step
Six_Step
Seven_Step } 

echo "Choose step" 
case "$var" in
1) First_Step;; 
2) Second_Step;; 
3) Third_Step;; 
4) Fourth_Step;; 
5) Fifth_Step;; 
6) Six_Step;; 
7) ExecuteAll;; 
esac 
 
 
 
 
 

3. Результати роботи


Висновок
У ході виконання цієї лабораторної роботи була розглянута робота з командним рядком середовища Raspbian. Були набуті навички з використання вдосконаленної і модернізованої командної оболонки Bourn Shell (bash), а саме навички роботи з файлами, пошуку окремих виразів у файлах та директоріях і створення виконавчих файлів у середовищі Raspbian.  
